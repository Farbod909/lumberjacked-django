name: Deploy to dev environment

on: workflow_dispatch

env:
  PROJECT_ID: lumberjacked
  GAR_LOCATION: us-west2
  SERVICE: lumberjacked-dev-2
  GAR_SERVICE: lumberjacked
  REGION: us-west2
  DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
  POSTGRES_HOST: ${{ vars.POSTGRES_HOST }}
  POSTGRES_PORT: ${{ vars.POSTGRES_PORT }}
  POSTGRES_DB: ${{ vars.POSTGRES_DB }}
  POSTGRES_USER: ${{ vars.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  GOOGLE_OAUTH_CLIENT_ID: ${{ vars.GOOGLE_OAUTH_CLIENT_ID }}
  GOOGLE_OAUTH_CLIENT_SECRET: ${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }}
  GOOGLE_OAUTH_CALLBACK_URL: ${{ vars.GOOGLE_OAUTH_CALLBACK_URL }}
  EMAIL_BACKEND: ${{ vars.EMAIL_BACKEND }}
  EMAIL_HOST: ${{ vars.EMAIL_HOST }}
  EMAIL_PORT: ${{ vars.EMAIL_PORT }}
  EMAIL_USE_TLS: ${{ vars.EMAIL_USE_TLS }}
  EMAIL_HOST_USER: ${{ vars.EMAIL_HOST_USER }}
  EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
  WIF_PROVIDER: ${{ secrets.WIF_PROVIDER }}
  WIF_SERVICE_ACCOUNT: ${{ secrets.WIF_SERVICE_ACCOUNT }}

jobs:
  deploy:
    permissions:
      contents: "read"
      id-token: "write"

    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install dependencies
        run: |-
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        run: python manage.py test --keepdb --noinput

      - name: Migrate schema changes
        run: python manage.py migrate

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          workload_identity_provider: "${{ env.WIF_PROVIDER }}"
          service_account: "${{ env.WIF_SERVICE_ACCOUNT }}"

      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: "${{ env.GAR_LOCATION }}-docker.pkg.dev"
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build and Push Container
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_SERVICE }}/${{ env.GAR_SERVICE }}:${{ github.sha }}
            ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_SERVICE }}/${{ env.GAR_SERVICE }}:latest
            ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_SERVICE }}/${{ env.GAR_SERVICE }}:dev

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: "${{ env.SERVICE }}"
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_SERVICE }}/${{ env.GAR_SERVICE }}:${{ github.sha }}
          env_vars: |
            PROJECT_ID=${{ env.PROJECT_ID }}
            GAR_LOCATION=${{ env.GAR_LOCATION }}
            SERVICE=${{ env.SERVICE }}
            GAR_SERVICE=${{ env.GAR_SERVICE }}
            REGION=${{ env.REGION }}
            DJANGO_SECRET_KEY=${{ env.DJANGO_SECRET_KEY }}
            POSTGRES_HOST=${{ env.POSTGRES_HOST }}
            POSTGRES_PORT=${{ env.POSTGRES_PORT }}
            POSTGRES_DB=${{ env.POSTGRES_DB }}
            POSTGRES_USER=${{ env.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ env.POSTGRES_PASSWORD }}
            GOOGLE_OAUTH_CLIENT_ID=${{ env.GOOGLE_OAUTH_CLIENT_ID }}
            GOOGLE_OAUTH_CLIENT_SECRET=${{ env.GOOGLE_OAUTH_CLIENT_SECRET }}
            GOOGLE_OAUTH_CALLBACK_URL=${{ env.GOOGLE_OAUTH_CALLBACK_URL }}
            EMAIL_BACKEND=${{ env.EMAIL_BACKEND }}
            EMAIL_HOST=${{ env.EMAIL_HOST }}
            EMAIL_PORT=${{ env.EMAIL_PORT }}
            EMAIL_USE_TLS=${{ env.EMAIL_USE_TLS }}
            EMAIL_HOST_USER=${{ env.EMAIL_HOST_USER }}
            EMAIL_HOST_PASSWORD=${{ env.EMAIL_HOST_PASSWORD }}
            WIF_PROVIDER=${{ env.WIF_PROVIDER }}
            WIF_SERVICE_ACCOUNT=${{ env.WIF_SERVICE_ACCOUNT }}

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
